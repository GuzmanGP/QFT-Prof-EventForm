:root {
    --input-bg: #2b3035;
    --input-border: #424242;
    --input-focus-border: #0d6efd;
    --card-hover-bg: #2d3238;
    --input-hover-bg: #343a40;
    --spinner-button-bg: #343a40;
    --spinner-button-hover-bg: #424242;
    --error-color: #dc3545;
    --error-bg: rgba(220, 53, 69, 0.1);
}

body {
    background-color: #212529;
    color: #fff;
}

.form-control {
    background-color: var(--input-bg);
    border: 1px solid var(--input-border);
    padding: 0.375rem 0.75rem;
    transition: all 0.15s ease-in-out;
}

.form-control:hover {
    background-color: var(--input-hover-bg);
}

.form-control:focus {
    background-color: var(--input-bg);
    border-color: var(--input-focus-border);
    box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
}

textarea.form-control {
    min-height: 100px;
    resize: vertical;
}

.expandable-textarea {
    transition: min-height 0.3s ease;
}

.expandable-textarea:focus {
    min-height: 200px;
}

/* Number input styling with separate up/down buttons */
input[type="number"] {
    text-align: center;
    -moz-appearance: textfield;
    position: relative;
    width: 80px;
    padding-right: 1.5rem;
}

/* Remove default spinners */
input[type="number"]::-webkit-outer-spin-button,
input[type="number"]::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

/* Custom number input container */
.metadata-counter {
    position: relative;
    display: inline-block;
}

/* Add custom spinner buttons */
.metadata-counter::after,
.metadata-counter::before {
    content: "";
    position: absolute;
    right: 0;
    width: 1.5rem;
    height: 50%;
    background-color: var(--spinner-button-bg);
    pointer-events: none;
    transition: background-color 0.15s ease;
}

/* Up arrow */
.metadata-counter::before {
    top: 0;
    border-top-right-radius: 0.25rem;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='6' viewBox='0 0 12 6'%3E%3Cpath d='M6 0l6 6H0z' fill='%23ffffff'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: center;
}

/* Down arrow */
.metadata-counter::after {
    bottom: 0;
    border-bottom-right-radius: 0.25rem;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='6' viewBox='0 0 12 6'%3E%3Cpath d='M6 6l6-6H0z' fill='%23ffffff'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: center;
}

/* Hover states for spinner buttons */
.metadata-counter:hover::before,
.metadata-counter:hover::after {
    background-color: var(--spinner-button-hover-bg);
}

.btn-primary {
    background-color: #0d6efd;
    border-color: #0d6efd;
    transition: all 0.15s ease-in-out;
}

.btn-primary:hover {
    background-color: #0b5ed7;
    border-color: #0a58ca;
}

.btn-secondary {
    background-color: #6c757d;
    border-color: #6c757d;
}

.card {
    background-color: #2b3035;
    border: 1px solid var(--input-border);
    transition: all 0.3s ease;
}

.card:hover {
    background-color: var(--card-hover-bg);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
}

.question-card {
    margin-bottom: 2rem;
    border-bottom: 2px solid var(--input-border);
}

.question-card .card-header {
    background-color: rgba(0, 0, 0, 0.2);
    border-bottom: 1px solid var(--input-border);
    padding: 1rem;
}

.question-number {
    color: #fff;
    font-weight: 500;
}

.alert {
    border: none;
    border-radius: 0.25rem;
}

.alert-success {
    background-color: #198754;
    color: #fff;
}

.alert-danger {
    background-color: #dc3545;
    color: #fff;
}

.metadata-container {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
}

.metadata-counter {
    margin-left: auto;
}

.input-group {
    margin-bottom: 1rem;
}

.ai-instructions {
    display: none;
    margin-top: 1rem;
    padding-top: 1rem;
    border-top: 1px solid var(--input-border);
}

.form-check {
    margin: 1rem 0;
}

#questions {
    margin-top: 2rem;
}

.question-actions {
    display: flex;
    justify-content: flex-end;
    gap: 0.5rem;
    margin-top: 1rem;
    padding-top: 1rem;
    border-top: 1px solid var(--input-border);
}

/* Form validation styles */
.form-control.is-invalid {
    border-color: var(--error-color);
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e");
    background-repeat: no-repeat;
    background-position: right calc(0.375em + 0.1875rem) center;
    background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
    padding-right: calc(1.5em + 0.75rem);
}

.invalid-feedback {
    display: none;
    color: var(--error-color);
    font-size: 0.875rem;
    margin-top: 0.25rem;
}

.form-control.is-invalid:focus {
    border-color: var(--error-color);
    box-shadow: 0 0 0 0.25rem rgba(220, 53, 69, 0.25);
}

.form-control.is-invalid + .invalid-feedback,
.form-control.is-invalid ~ .invalid-feedback {
    display: block;
}

.validation-shake {
    animation: shake 0.5s;
}

@keyframes shake {
    0%, 100% { transform: translateX(0); }
    10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
    20%, 40%, 60%, 80% { transform: translateX(5px); }
}

.error-summary {
    background-color: var(--error-bg);
    border: 1px solid var(--error-color);
    border-radius: 0.25rem;
    padding: 1rem;
    margin-bottom: 1rem;
    display: none;
}

.error-summary.show {
    display: block;
}

.error-summary ul {
    margin-bottom: 0;
    padding-left: 1.25rem;
}

.error-summary li {
    color: var(--error-color);
}