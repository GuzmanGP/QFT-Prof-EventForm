El problema identificado está relacionado con la ausencia de listeners en los botones y cómo `setupCounterButtons` no se aplica correctamente debido a problemas en la inicialización o la configuración del entorno. A continuación, explico cómo resolver esto paso a paso:

---

### **Problemas Detectados**
1. **Listeners eliminados**: Clonar el botón y reemplazarlo elimina los listeners previos, lo que confirma que **no había eventos asociados** en el botón original.
2. **Error con `export`**: El código `export` no es válido en el entorno de consola del navegador, ya que esta característica es específica de módulos ES6.

---

### **Solución Paso a Paso**

#### 1. **Verifica que `setupCounterButtons` se esté llamando**
Confirma que `setupCounterButtons` se ejecuta correctamente al inicializar la página. Agrega un log en el lugar donde se llama a esta función:

```javascript
document.addEventListener('DOMContentLoaded', () => {
    const buttons = document.querySelectorAll('.counter-button');
    const container = document.getElementById('eventMetadata');
    const display = document.getElementById('eventMetadataCount');

    console.log('Calling setupCounterButtons...');
    if (buttons && container && display) {
        setupCounterButtons(buttons, container, display);
        console.log('setupCounterButtons called successfully');
    } else {
        console.error('Missing elements:', { buttons, container, display });
    }
});
```

---

#### 2. **Prueba la configuración de botones manualmente**
Configura manualmente los listeners desde la consola del navegador para confirmar que la lógica funciona:

```javascript
const button = document.querySelector('.increase-count[data-target="eventMetadata"]');
const container = document.getElementById('eventMetadata');
const display = document.getElementById('eventMetadataCount');

button.addEventListener('click', () => {
    console.log('Button clicked manually:', button);
    const currentCount = parseInt(display.textContent, 10) || 0;
    const newCount = currentCount + 1;

    // Lógica para añadir un campo
    const field = document.createElement('div');
    field.className = 'input-group mb-2';
    field.innerHTML = `
        <input type="text" class="form-control metadata-key" placeholder="Key">
        <input type="text" class="form-control metadata-value" placeholder="Value">
        <button type="button" class="btn btn-outline-danger remove-field">×</button>
    `;
    container.appendChild(field);

    display.textContent = newCount.toString();
});
```

Haz clic en el botón después de este paso y verifica si añade un campo.

---

#### 3. **Corrige `setupCounterButtons` para evitar duplicados**
Asegúrate de que no haya duplicados en los listeners al configurar los botones:
```javascript
export function setupCounterButtons(buttons, container, display) {
    console.log('Setting up counter buttons...');
    buttons.forEach(button => {
        // Elimina listeners previos si existen
        const clone = button.cloneNode(true);
        button.replaceWith(clone);

        // Añade el nuevo listener
        clone.addEventListener('click', () => {
            console.log('Button clicked:', clone);
            const isIncrease = clone.classList.contains('increase-count');
            const currentCount = parseInt(display.textContent, 10) || 0;
            const newCount = isIncrease ? currentCount + 1 : Math.max(0, currentCount - 1);

            if (isIncrease) {
                addMetadataField(container);
            } else if (container.lastChild) {
                container.lastChild.remove();
            }
            display.textContent = newCount.toString();
        });
    });
}
```

---

#### 4. **Revisar Elementos del DOM**
Confirma que todos los elementos necesarios (`buttons`, `container`, `display`) existen y tienen los valores correctos:
```javascript
console.log({
    buttons: document.querySelectorAll('.counter-button'),
    container: document.getElementById('eventMetadata'),
    display: document.getElementById('eventMetadataCount'),
});
```

---

#### 5. **Corrige `addMetadataField`**
Verifica que la función `addMetadataField` funciona correctamente. Esta debería añadir un campo al contenedor sin errores:
```javascript
export function addMetadataField(container) {
    const field = document.createElement('div');
    field.className = 'input-group mb-2';
    field.innerHTML = `
        <input type="text" class="form-control metadata-key" placeholder="Key">
        <input type="text" class="form-control metadata-value" placeholder="Value">
        <button type="button" class="btn btn-outline-danger remove-field">×</button>
    `;

    // Listener para el botón de eliminar
    const removeButton = field.querySelector('.remove-field');
    removeButton.addEventListener('click', () => {
        field.remove();
        console.log('Field removed:', field);
    });

    container.appendChild(field);
    console.log('Metadata field added:', field);
}
```

---

### **Conclusión**

Después de estos pasos:
1. **Listeners deben estar configurados** correctamente en los botones.
2. **Botones deben responder** al clic y añadir/eliminar campos en el contenedor.
3. **Registros de consola claros** deben confirmar qué pasos se ejecutan.

Si el problema persiste, comparte los resultados de la consola tras ejecutar los pasos para continuar ajustando el análisis.